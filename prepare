#!/bin/sh
# The MIT License (MIT)
# 
# Copyright (c) 2015 Tom Hancocks
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Options
PREFIX="$HOME/opt/cross"
TARGET="i686-elf"
DEST="/tmp/osdev"
CC="gcc"

SHOW_HELP="no"
FORCE_INSTALL="no"
PURGE="no"
OPTS=""
for opt do
	OPTS="${OPTS}${opt} "
    case "$opt" in
    --prefix=*) PREFIX=`echo $opt | cut -d '=' -f 2`
    ;;
    --target=*) TARGET=`echo $opt | cut -d '=' -f 2`
    ;;
    --cc=*) CC=`echo $opt | cut -d '=' -f 2`
    ;;
    --force) FORCE_INSTALL="yes"
    ;;
    --download) DEST=`echo $opt | cut -d '=' -f 2`
    ;;
    --purge) PURGE="yes";
    ;;
    --help) SHOW_HELP="yes"
    ;;
    esac
done

if [ "$SHOW_HELP" == "yes" ]; then
cat <<EOF

Usage: ./prepare [options]
Options: [defaults in brackets after descriptions]

In order for this tool to run correctly, you will need bash, homebrew and 
a working version of clang or gcc.

EOF
echo "Standard Options"
echo "--help        Display script options"
echo "--target      The architecture the toolchain should target [${TARGET}]"
echo "--cc          The compiler toolchain to build [${CC}]"
echo "--prefix      Where the toolchain should placed [${PREFIX}]"
echo "--download    Where any required packages should be downloaded to"
echo "              [${DEST}]"
echo "--force       Forces the script to proceed even if the tools are already"
echo "              installed."
echo "--purge       Purges all previously downloaded packages."
exit 1
fi

# We now need to work out the target of the script. Is it MacOSX or Linux?
case "${OSTYPE}" in
    darwin*)    PLATFORM="macosx" 
    ;;
    linux*)     PLATFORM="linux" 
    ;;
    *)          exit 1
    ;;
esac


if [ "$CC" == "gcc" ]; then
	toolchain/gcc/prepare-gcc-${PLATFORM} ${OPTS}
else
	echo "\033[1;31mUnsupported Compiler: No toolchain available!\033[0m"
	exit 1
fi
